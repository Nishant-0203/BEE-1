<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>FAQ Chatbot - NoteMaster</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>
<body class="bg-gray-100">
  <div class="container mx-auto p-8">
    <h1 class="text-3xl font-bold mb-4">NoteMaster Chatbot Assistant</h1>
    <p class="text-gray-700 mb-6">Ask me anything about NoteMaster â€“ I'm here to help!</p>

    <div class="max-w-lg mx-auto bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4">
      <div id="chat-box" class="h-96 overflow-y-auto mb-4 p-4 bg-gray-50 rounded border border-gray-200">
        <div class="mb-2 p-3 rounded bg-blue-100 text-blue-800">
          ðŸ¤– Hi! I'm NoteBot. Ask me anything about NoteMaster!
        </div>
      </div>

      <div class="flex gap-2">
        <input
          id="user-input"
          type="text"
          placeholder="Type your message and hit Enter..."
          class="flex-1 p-3 rounded border border-gray-300 focus:outline-none focus:ring-2 focus:ring-blue-400"
        />
        <button
          id="clear-btn"
          class="px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600"
        >
          Clear
        </button>
      </div>
    </div>
  </div>

  <script>
    const chatBox = document.getElementById("chat-box");
    const input = document.getElementById("user-input");
    const clearBtn = document.getElementById("clear-btn");

    input.addEventListener("keypress", async function (e) {
      if (e.key === "Enter" && input.value.trim() !== "") {
        const userMsg = input.value.trim();
        addMessage("user", userMsg);
        
        // Show typing indicator
        const typingIndicator = document.createElement("div");
        typingIndicator.id = "typing-indicator";
        typingIndicator.className = "mb-2 p-3 rounded bg-gray-200 text-gray-800";
        typingIndicator.textContent = "ðŸ¤– Typing...";
        chatBox.appendChild(typingIndicator);
        chatBox.scrollTop = chatBox.scrollHeight;
        
        // Clear input right away
        input.value = "";
        
        try {
          // Send request to backend
          const response = await fetch('/api/chat', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ message: userMsg })
          });
          
          if (!response.ok) {
            throw new Error('Network response was not ok');
          }
          
          const data = await response.json();
          
          // Remove typing indicator
          const indicator = document.getElementById("typing-indicator");
          if (indicator) indicator.remove();
          
          // Add bot response
          addMessage("bot", data.reply);
        } catch (error) {
          console.error('Error:', error);
          
          // Remove typing indicator
          const indicator = document.getElementById("typing-indicator");
          if (indicator) indicator.remove();
          
          // Add error message
          addMessage("bot", "Sorry, I'm having trouble connecting right now. Please try again later.");
        }
      }
    });

    clearBtn.addEventListener("click", function () {
      chatBox.innerHTML = `
        <div class="mb-2 p-3 rounded bg-blue-100 text-blue-800">
          ðŸ¤– Chat cleared. Ask me anything about NoteMaster!
        </div>`;
    });

    function addMessage(sender, msg) {
      const div = document.createElement("div");
      div.className = sender === "user"
        ? "mb-2 p-3 rounded bg-indigo-100 text-indigo-800 text-right"
        : "mb-2 p-3 rounded bg-gray-200 text-gray-800";
      div.textContent = msg;
      chatBox.appendChild(div);
      chatBox.scrollTop = chatBox.scrollHeight;
    }
  </script>
</body>
</html>